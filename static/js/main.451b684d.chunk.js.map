{"version":3,"sources":["components/SearchBar/index.js","components/Top/index.js","components/Emdir/index.js","utils/API.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","state","searchTerm","isSearching","queries","handleInputChange","event","target","name","value","setState","searchForName","newUsers","props","userState","users","filter","user","first","toLowerCase","includes","last","onUserSearch","searchForLocation","location","city","searchForBirthday","Date","dob","date","toLocaleDateString","searchForPronouns","gender","clearSearch","allUsers","InputGroup","Prepend","this","Button","variant","onClick","FormControl","placeholder","aria-label","aria-describedby","as","onChange","type","DropdownButton","Append","title","id","Dropdown","Item","onSelect","Component","styles","backgroundColor","Top","Jumbotron","style","fluid","Container","className","icon","faAddressBook","Emdir","nameSort","locationSort","birthdaySort","sortByName","sortedUsers","sort","a","b","onUserSort","sortByLocation","sortByBirthday","tableHeaderClick","showNameSort","faCaretUp","faCaretDown","showLocationSort","showBirthdaySort","Table","striped","bordered","hover","responsive","size","map","key","src","picture","large","alt","faPhoneSquareAlt","phone","faMobileAlt","cell","faEnvelopeOpenText","email","length","axios","get","App","onUsersChange","API","then","res","data","results","catch","err","console","log","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.451b684d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SearchBar extends Component {\n  state = {\n    searchTerm: \"\",\n    isSearching: false,\n    queries: [],\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  searchForName = () => {\n    this.setState({ isSearching: true });\n    // filter name based on first or last name\n    const newUsers = this.props.userState.users.filter((user) => {\n      return (\n        user.name.first\n          .toLowerCase()\n          .includes(this.state.searchTerm.toLowerCase()) ||\n        user.name.last\n          .toLowerCase()\n          .includes(this.state.searchTerm.toLowerCase())\n      );\n    });\n    this.props.onUserSearch(newUsers);\n  };\n\n  searchForLocation = () => {\n    this.setState({ isSearching: true });\n    // filter location based on city or state\n    const newUsers = this.props.userState.users.filter((user) => {\n      return (\n        user.location.city\n          .toLowerCase()\n          .includes(this.state.searchTerm.toLowerCase()) ||\n        user.location.state\n          .toLowerCase()\n          .includes(this.state.searchTerm.toLowerCase())\n      );\n    });\n    this.props.onUserSearch(newUsers);\n  };\n\n  searchForBirthday = () => {\n    this.setState({ isSearching: true });\n    // filter birthday based on any portion of the date matching search term\n    const newUsers = this.props.userState.users.filter((user) => {\n      const birthday = new Date(user.dob.date).toLocaleDateString();\n      return birthday.includes(this.state.searchTerm);\n    });\n    this.props.onUserSearch(newUsers);\n  };\n\n  searchForPronouns = () => {\n    this.setState({ isSearching: true });\n    // filter pronouns based on partial match he/him or she/her\n    const newUsers = this.props.userState.users.filter((user) => {\n      if (\n        this.state.searchTerm.toLowerCase().includes(\"she\") ||\n        this.state.searchTerm.toLowerCase().includes(\"her\")\n      ) {\n        return user.gender === \"female\";\n      }\n      if (\n        this.state.searchTerm.toLowerCase() === \"he\" || // she includes he\n        this.state.searchTerm.toLowerCase().includes(\"him\")\n      ) {\n        return user.gender === \"male\";\n      }\n      return false;\n    });\n    this.props.onUserSearch(newUsers);\n  };\n\n  clearSearch = () => {\n    this.props.onUserSearch(this.props.userState.allUsers);\n    this.setState({\n      isSearching: false,\n      searchTerm: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <InputGroup>\n        <InputGroup.Prepend>\n          {this.state.isSearching && (\n            <Button variant=\"danger\" onClick={this.clearSearch}>\n              Clear Search\n            </Button>\n          )}\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder=\"Search the directory\"\n          aria-label=\"Search the directory\"\n          aria-describedby=\"basic-addon2\"\n          as=\"input\"\n          onChange={this.handleInputChange}\n          name=\"searchTerm\"\n          value={this.state.searchTerm}\n          type=\"text\"\n        />\n\n        <DropdownButton\n          as={InputGroup.Append}\n          variant=\"primary\"\n          title=\"Search For\"\n          id=\"emdir-field-select\"\n        >\n          <Dropdown.Item onSelect={this.searchForName}>Name</Dropdown.Item>\n          <Dropdown.Item onSelect={this.searchForLocation}>\n            Location\n          </Dropdown.Item>\n          <Dropdown.Item onSelect={this.searchForBirthday}>\n            Birthday\n          </Dropdown.Item>\n          <Dropdown.Item onSelect={this.searchForPronouns}>\n            Pronouns\n          </Dropdown.Item>\n        </DropdownButton>\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport SearchBar from \"../SearchBar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAddressBook } from \"@fortawesome/free-solid-svg-icons\";\n\nconst styles = {\n  backgroundColor: \"#77C01E\",\n};\n\nfunction Top(props) {\n  return (\n    <Jumbotron style={styles} fluid>\n      <Container>\n        <h1 className=\"display-4\">\n          <FontAwesomeIcon icon={faAddressBook} /> EMployee DIRectory\n        </h1>\n        <SearchBar\n          userState={props.userState}\n          onUserSearch={props.onUserSearch}\n        />\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Top;\n","import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPhoneSquareAlt,\n  faMobileAlt,\n  faEnvelopeOpenText,\n  faCaretUp,\n  faCaretDown,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./styles.css\";\n\nclass Emdir extends Component {\n  state = {\n    nameSort: \"\",\n    locationSort: \"\",\n    birthdaySort: \"\",\n  };\n\n  sortByName = () => {\n    // cycle thru first asc, first desc, last asc, last desc, default order\n    const sortedUsers = this.props.userState.users;\n    switch (this.state.nameSort) {\n      case \"\":\n      case \"lastDesc\":\n        // sort by first name ascending\n        sortedUsers.sort((a, b) =>\n          a.name.first.toLowerCase() > b.name.first.toLowerCase() ? 1 : -1\n        );\n        this.setState({ nameSort: \"firstAsc\" });\n        this.props.onUserSort(sortedUsers);\n        break;\n\n      case \"firstAsc\":\n        // sort by first name descending\n        sortedUsers.sort((a, b) =>\n          a.name.first.toLowerCase() > b.name.first.toLowerCase() ? -1 : 1\n        );\n        this.setState({ nameSort: \"firstDesc\" });\n        this.props.onUserSort(sortedUsers);\n        break;\n\n      case \"firstDesc\":\n        // sort by last name ascending\n        sortedUsers.sort((a, b) =>\n          a.name.last.toLowerCase() > b.name.last.toLowerCase() ? 1 : -1\n        );\n        this.setState({ nameSort: \"lastAsc\" });\n        this.props.onUserSort(sortedUsers);\n        break;\n\n      case \"lastAsc\":\n        // sort by last name descending\n        sortedUsers.sort((a, b) =>\n          a.name.last.toLowerCase() > b.name.last.toLowerCase() ? -1 : 1\n        );\n        this.setState({ nameSort: \"lastDesc\" });\n        this.props.onUserSort(sortedUsers);\n        break;\n\n      default:\n        // default to empty string (no sort)\n        this.setState({ nameSort: \"\" });\n        break;\n    }\n  };\n\n  sortByLocation = () => {\n    // cycle thru city asc, city desc, state asc, state desc, default order\n    const sortedUsers = this.props.userState.users;\n    switch (this.state.locationSort) {\n      case \"\":\n      case \"stateDesc\":\n        // sort by city ascending\n        sortedUsers.sort((a, b) =>\n          a.location.city.toLowerCase() > b.location.city.toLowerCase() ? 1 : -1\n        );\n        this.setState({ locationSort: \"cityAsc\" });\n        this.props.onUserSort(sortedUsers);\n        break;\n\n      case \"cityAsc\":\n        // sort by city descending\n        sortedUsers.sort((a, b) =>\n          a.location.city.toLowerCase() > b.location.city.toLowerCase() ? -1 : 1\n        );\n        this.setState({ locationSort: \"cityDesc\" });\n        this.props.onUserSort(sortedUsers);\n        break;\n\n      case \"cityDesc\":\n        // sort by state ascending\n        sortedUsers.sort((a, b) =>\n          a.location.state.toLowerCase() > b.location.state.toLowerCase()\n            ? 1\n            : -1\n        );\n        this.setState({ locationSort: \"stateAsc\" });\n        this.props.onUserSort(sortedUsers);\n        break;\n\n      case \"stateAsc\":\n        // sort by state descending\n        sortedUsers.sort((a, b) =>\n          a.location.state.toLowerCase() > b.location.state.toLowerCase()\n            ? -1\n            : 1\n        );\n        this.setState({ locationSort: \"stateDesc\" });\n        this.props.onUserSort(sortedUsers);\n        break;\n\n      default:\n        // default to empty string (no sort)\n        this.setState({ locationSort: \"\" });\n        break;\n    }\n  };\n\n  sortByBirthday = () => {\n    // cycle thru birthday asc, birthday desc, default order\n    const sortedUsers = this.props.userState.users;\n    switch (this.state.birthdaySort) {\n      case \"\":\n      case \"birthdayDesc\":\n        // sort by birthday ascending\n        sortedUsers.sort((a, b) =>\n          new Date(a.dob.date) > new Date(b.dob.date) ? 1 : -1\n        );\n        this.setState({ birthdaySort: \"birthdayAsc\" });\n        this.props.onUserSort(sortedUsers);\n        break;\n\n      case \"birthdayAsc\":\n        // sort by birthday descending\n        sortedUsers.sort((a, b) =>\n          new Date(a.dob.date) > new Date(b.dob.date) ? -1 : 1\n        );\n        this.setState({ birthdaySort: \"birthdayDesc\" });\n        this.props.onUserSort(sortedUsers);\n        break;\n\n      default:\n        // default to empty string (no sort)\n        this.setState({ birthdaySort: \"\" });\n        break;\n    }\n  };\n\n  tableHeaderClick = (event) => {\n    switch (event.target.id) {\n      case \"name\":\n        this.sortByName();\n        break;\n\n      case \"contact\":\n        // electing not to sort contact info, but could be added in the future\n        break;\n\n      case \"location\":\n        this.sortByLocation();\n        break;\n\n      case \"birthday\":\n        this.sortByBirthday();\n        break;\n\n      case \"pronouns\":\n        // electing not to sort pronouns, but could be added in the future\n        break;\n\n      default:\n        // do nothing\n        break;\n    }\n  };\n\n  showNameSort = () => {\n    switch (this.state.nameSort) {\n      case \"firstAsc\":\n        return (\n          <>\n            | First <FontAwesomeIcon icon={faCaretUp} />\n          </>\n        );\n      case \"firstDesc\":\n        return (\n          <>\n            | First <FontAwesomeIcon icon={faCaretDown} />\n          </>\n        );\n      case \"lastAsc\":\n        return (\n          <>\n            | Last <FontAwesomeIcon icon={faCaretUp} />\n          </>\n        );\n      case \"lastDesc\":\n        return (\n          <>\n            | Last <FontAwesomeIcon icon={faCaretDown} />\n          </>\n        );\n      default:\n        return <span></span>;\n    }\n  };\n\n  showLocationSort = () => {\n    switch (this.state.locationSort) {\n      case \"cityAsc\":\n        return (\n          <>\n            | City <FontAwesomeIcon icon={faCaretUp} />\n          </>\n        );\n      case \"cityDesc\":\n        return (\n          <>\n            | City <FontAwesomeIcon icon={faCaretDown} />\n          </>\n        );\n      case \"stateAsc\":\n        return (\n          <>\n            | State <FontAwesomeIcon icon={faCaretUp} />\n          </>\n        );\n      case \"stateDesc\":\n        return (\n          <>\n            | State <FontAwesomeIcon icon={faCaretDown} />\n          </>\n        );\n      default:\n        return <span></span>;\n    }\n  };\n\n  showBirthdaySort = () => {\n    switch (this.state.birthdaySort) {\n      case \"birthdayAsc\":\n        return <FontAwesomeIcon icon={faCaretUp} />;\n\n      case \"birthdayDesc\":\n        return <FontAwesomeIcon icon={faCaretDown} />;\n\n      default:\n        return <span></span>;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <p className=\"text-light\">\n          Click a table header to cycle through available sorts\n        </p>\n        <Table striped bordered hover responsive variant=\"dark\" size=\"sm\">\n          <thead className=\"text-center\">\n            <tr onClick={this.tableHeaderClick}>\n              <th id=\"name\">Name {this.showNameSort()}</th>\n              <th id=\"contact\">Contact</th>\n              <th id=\"location\">Location {this.showLocationSort()}</th>\n              <th id=\"birthday\">Birthday {this.showBirthdaySort()}</th>\n              <th id=\"pronouns\">Pronouns</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.userState.users.map((user) => {\n              return (\n                <tr key={user.id.value}>\n                  <td className=\"text-center\">\n                    <img src={user.picture.large} alt={user.name.last} />\n                    <br />\n                    {user.name.first} {user.name.last}\n                  </td>\n                  <td>\n                    <FontAwesomeIcon icon={faPhoneSquareAlt} size=\"2x\" />{\" \"}\n                    {user.phone}\n                    <br />\n                    <FontAwesomeIcon icon={faMobileAlt} size=\"2x\" /> {user.cell}\n                    <br />\n                    <FontAwesomeIcon icon={faEnvelopeOpenText} size=\"2x\" />{\" \"}\n                    {user.email}\n                  </td>\n                  <td>\n                    {user.location.city}, {user.location.state}\n                  </td>\n                  <td>{new Date(user.dob.date).toLocaleDateString()}</td>\n                  <td>{user.gender === \"male\" ? \"he/him\" : \"she/her\"}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n        {!this.props.userState.users.length && (\n          <p className=\"text-light\">Your search produced no results</p>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Emdir;\n","import axios from \"axios\";\n\n// seed to be used by random user API\nconst seed = \"thadkingcole\";\n\nexport default {\n  getUsers: () => {\n    return axios.get(\n      `https://randomuser.me/api/?results=200&nat=us&seed=${seed}`\n    );\n  },\n};\n","import React, { Component } from \"react\";\nimport Top from \"./components/Top\";\nimport Container from \"react-bootstrap/Container\";\nimport Emdir from \"./components/Emdir\";\nimport API from \"./utils/API\";\n\nclass App extends Component {\n  state = {\n    users: [],\n    allUsers: [],\n  };\n\n  componentDidMount() {\n    API.getUsers()\n      .then((res) => {\n        this.setState({ users: res.data.results });\n        if (!this.state.allUsers.length) {\n          this.setState({ allUsers: res.data.results });\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  onUsersChange = (newUsers) => {\n    this.setState({ users: newUsers });\n  };\n\n  render() {\n    return (\n      <>\n        <Top userState={this.state} onUserSearch={this.onUsersChange} />\n        <Container>\n          <Emdir userState={this.state} onUserSort={this.onUsersChange} />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}